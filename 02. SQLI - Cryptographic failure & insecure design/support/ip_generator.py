#!/usr/bin/env python3

import argparse

def generate_ip_list(start_ip, end_ip):
    start_octets = [int(octet) for octet in start_ip.split('.')]
    end_octets = [int(octet) for octet in end_ip.split('.')]

    ip_list = []

    for a in range(start_octets[0], end_octets[0] + 1):
        if a == start_octets[0]:
            start_b = start_octets[1]
        else:
            start_b = 0

        if a == end_octets[0]:
            end_b = end_octets[1]
        else:
            end_b = 255

        for b in range(start_b, end_b + 1):
            if a == start_octets[0] and b == start_b:
                start_c = start_octets[2]
            else:
                start_c = 0

            if a == end_octets[0] and b == end_b:
                end_c = end_octets[2]
            else:
                end_c = 255

            for c in range(start_c, end_c + 1):
                if a == start_octets[0] and b == start_b and c == start_c:
                    start_d = start_octets[3]
                else:
                    start_d = 0

                if a == end_octets[0] and b == end_b and c == end_c:
                    end_d = end_octets[3]
                else:
                    end_d = 255

                for d in range(start_d, end_d + 1):
                    ip_address = "{}.{}.{}.{}".format(a, b, c, d)
                    ip_list.append(ip_address)

    return ip_list


def write_ip_list_to_file(ip_list, output_file):
    with open(output_file, 'w') as file:
        for ip in ip_list:
            file.write(ip + '\n')

def main():
    parser = argparse.ArgumentParser(description='Generate a list of IP addresses.')
    parser.add_argument('--start_ip', help='Starting IP address')
    parser.add_argument('--end_ip', help='Ending IP address')
    parser.add_argument('--output_file', help='Output file to save the generated IP addresses')

    args = parser.parse_args()

    start_ip = args.start_ip
    end_ip = args.end_ip
    output_file = args.output_file

    if not all([start_ip, end_ip, output_file]):
        parser.error('Missing argument(s). Please provide --start_ip, --end_ip, and --output_file.')

    ip_list = generate_ip_list(start_ip, end_ip)

    write_ip_list_to_file(ip_list, output_file)

    print(f"Generated IP addresses saved to '{output_file}'")

if __name__ == "__main__":
    main()
